<launch>
    <arg name="name_space"/>
    <arg name="laser_ip"/>
    <arg name="laser_frame"/>
    <arg name="parent_frame" />
    <arg name="grid_frame" />
    <arg name="minimum_object_width" />
    <arg name="minimum_object_length" />
    <arg name="grid_height" />
    <arg name="grid_width" />
    <arg name="grid_x" />
    <arg name="grid_y" />
    <arg name="modbus_address_output" />
    <arg name="modbus_address_input" />
    <arg name="zone_distance" />
    
    
    <group ns="$(arg name_space)">
        
        <!--///Initialise LIDAR Frame///-->
        <node pkg="bsl_collision_avoidance" type="initialise_LIDAR_transform.py" name="initialise_LIDAR_transform" respawn="true">
            <param name="laser_frame"  value="$(arg laser_frame)" />
            <param name="parent_frame"  value="$(arg parent_frame)" />
        </node>
        
        <!--///Message Frequency Dropper///-->
        <node pkg="topic_tools" type="drop" name="drop" args="cloud 4 5" respawn="true"/>
        
        <!--///Occupancy Grid Creation///-->
        <node pkg="bsl_collision_avoidance" type="occupancy_grid_creation.py" name="occupancy_grid_creation" respawn="true">
            <param name="laser_frame" value="$(arg laser_frame)"/>
            <param name="grid_frame" value="$(arg grid_frame)"/>
            <param name="grid_height" value="$(arg grid_height)"/>
            <param name="grid_width" value="$(arg grid_width)"/>
            <param name="grid_x" value="$(arg grid_x)"/>
            <param name="grid_y" value="$(arg grid_y)"/>
        </node>
        
        <!--///Object Detection///-->
        <node pkg="bsl_collision_avoidance" type="object_detection.py" name="object_detection" respawn="true">
            <param name="grid_frame" value="$(arg grid_frame)"/>
            <param name="minimum_object_width" value="$(arg minimum_object_width)"/>
            <param name="minimum_object_length" value="$(arg minimum_object_length)"/>
        </node>
        
        <!--///Digital I/O///-->
        <node pkg="bsl_collision_avoidance" type="digital_IO.py" name="digital_IO" respawn="true" output="screen">
            <param name="zone_distance" value="$(arg zone_distance)"/>
            <param name="grid_x" value="$(arg grid_x)"/>
            <param name="modbus_address_output" value="$(arg modbus_address_output)"/>
            <param name="modbus_address_input" value="$(arg modbus_address_input)"/>
        </node>
        
        <!--///Topic WatchDogs///-->
        <node pkg="bsl_collision_avoidance" type="topic_watch_dog.py" name="topic_watch_dog_1" respawn="true">
            <param name="topic" value="cloud"/>
            <param name="timeout" value="0.5"/>
        </node>
                
        <node pkg="bsl_collision_avoidance" type="topic_watch_dog.py" name="topic_watch_dog_2" respawn="true">
            <param name="topic" value="occupancy_grid"/>
            <param name="timeout" value="1.5"/>
        </node>
        
        <node pkg="bsl_collision_avoidance" type="topic_watch_dog.py" name="topic_watch_dog_3" respawn="true">
            <param name="topic" value="detected_objects"/>
            <param name="timeout" value="1.5"/>
        </node>

    </group>
</launch>
