<launch>
    <arg name="name_space"/>
    <arg name="laser_ip"/>
    <arg name="laser_frame"/>
	<arg name="parent_frame" />
	<arg name="grid_frame" />
	<arg name="grid_height" />
	<arg name="grid_width" />
	<arg name="grid_x" />
	<arg name="grid_y" />
	<arg name="digital_pin" />

    <group ns="$(arg name_space)">
        <!--///LiDAR///-->
        <node name="sick_mrs_6xxx" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen">
            <param name="filter_echos" type="int" value="2"/>
            <param name="frame_id" type="str" value="$(arg laser_frame)" />
            <param name="range_max" type="double" value="50.0" />
            <param name="hostname" type="string" value="$(arg laser_ip)" />
            <param name="port" type="string" value="2112" />
            <param name="timelimit" type="int" value="5" />
            <param name="min_ang" type="double" value="-1.047197333" />
            <param name="max_ang" type="double" value="+1.047197333" />
            <param name="scanner_type" type="string" value="sick_mrs_6xxx" />
        </node>
        
        <!--///Frame///-->
        <node pkg="bsl_collision_avoidance" type="laser_angle_broadcaster.py" name="laser_angle_broadcaster" respawn="true">
			<param name="laser_frame"  value="$(arg laser_frame)" />
			<param name="parent_frame"  value="$(arg parent_frame)" />
		</node>
        
        <!--///Message Dropper///-->
        <node pkg="topic_tools" type="drop" name="drop" args="cloud 4 5" respawn="true"/>
        
        <!--///Occupancy Grid Creaction///-->
        <node pkg="bsl_collision_avoidance" type="occupancy_grid_creation.py" name="occupancy_grid_creation" respawn="true">
            <param name="laser_frame" value="$(arg laser_frame)"/>
            <param name="grid_frame" value="$(arg grid_frame)"/>
            <param name="grid_height" value="$(arg grid_height)"/>
            <param name="grid_width" value="$(arg grid_width)"/>
            <param name="grid_x" value="$(arg grid_x)"/>
            <param name="grid_y" value="$(arg grid_y)"/>
        </node>
        
        <!--///Object Detection///-->
        <node pkg="bsl_collision_avoidance" type="object_detection.py" name="object_detection" respawn="true">
			<param name="grid_frame" value="$(arg grid_frame)"/>
		</node>
        
        <!--///Digital I/O///-->
        <node pkg="bsl_collision_avoidance" type="digital_IO.py" name="digital_IO" respawn="true">
			<param name="digital_pin" value="$(arg digital_pin)"/>
		</node>
		
		<!--///Topic WatchDogs///-->
		<node pkg="bsl_collision_avoidance" type="topic_watch_dog.py" name="topic_watch_dog_1" respawn="true">
			<param name="topic" value="cloud"/>
			<param name="topic_type" value="sensor_msgs.msg.PointCloud2"/>
			<param name="timeout" value="0.5"/>
		</node>
		
				
		<node pkg="bsl_collision_avoidance" type="topic_watch_dog.py" name="topic_watch_dog_2" respawn="true">
			<param name="topic" value="occupancy_grid"/>
			<param name="topic_type" value="nav_msgs.msg.OccupancyGrid"/>
			<param name="timeout" value="1.5"/>
		</node>
		
		<node pkg="bsl_collision_avoidance" type="topic_watch_dog.py" name="topic_watch_dog_3" respawn="true">
			<param name="topic" value="detected_objects"/>
			<param name="topic_type" value="visualization_msgs.msg.MarkerArray"/>
			<param name="timeout" value="1.5"/>
		</node>


    </group>
</launch>
